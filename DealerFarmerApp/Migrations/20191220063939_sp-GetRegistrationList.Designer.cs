// <auto-generated />
using DealerFarmerApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DealerFarmerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191220063939_sp-GetRegistrationList")]
    partial class spGetRegistrationList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DealerFarmerApp.Models.CityModel", b =>
                {
                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("cityModels");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.DelregistrationModel", b =>
                {
                    b.Property<int>("DelRegisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DealerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegisId")
                        .HasColumnType("int");

                    b.Property<string>("ShopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DelRegisId");

                    b.HasIndex("RegisId");

                    b.ToTable("delregistrationModels");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.FrmRegistrationModel", b =>
                {
                    b.Property<int>("FrmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float(50)");

                    b.Property<int>("MeasureId")
                        .HasColumnType("int");

                    b.Property<int>("RegisId")
                        .HasColumnType("int");

                    b.HasKey("FrmId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("RegisId");

                    b.ToTable("frmRegistrationModels");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.MeasurementData", b =>
                {
                    b.Property<int>("MeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MeasureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MeasureId");

                    b.ToTable("measurementDatas");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.PaymentDetails", b =>
                {
                    b.Property<int>("PMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CardOwnername")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExpirynDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("PMId");

                    b.ToTable("paymentDetail");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.RegistrationModel", b =>
                {
                    b.Property<int>("RegisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Mobile")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.Property<string>("userTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RegisId");

                    b.HasIndex("StateId");

                    b.HasIndex("userTypeId");

                    b.ToTable("registrationModels");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.StateModel", b =>
                {
                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StateId");

                    b.ToTable("stateModels");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.UserType", b =>
                {
                    b.Property<string>("userTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("userTypeId");

                    b.ToTable("userTypes");
                });

            modelBuilder.Entity("DealerFarmerApp.Models.CityModel", b =>
                {
                    b.HasOne("DealerFarmerApp.Models.StateModel", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DealerFarmerApp.Models.DelregistrationModel", b =>
                {
                    b.HasOne("DealerFarmerApp.Models.RegistrationModel", "registrationModel")
                        .WithMany()
                        .HasForeignKey("RegisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DealerFarmerApp.Models.FrmRegistrationModel", b =>
                {
                    b.HasOne("DealerFarmerApp.Models.MeasurementData", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealerFarmerApp.Models.RegistrationModel", "registrationModel")
                        .WithMany()
                        .HasForeignKey("RegisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DealerFarmerApp.Models.RegistrationModel", b =>
                {
                    b.HasOne("DealerFarmerApp.Models.StateModel", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealerFarmerApp.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("userTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
